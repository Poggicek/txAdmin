name: Production build

on:
  push:
    tags:
      - v*

jobs:
  check-tag-branch:
    runs-on: ubuntu-latest
    steps:
    - name: checkout source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get Branch
      run: |
        raw=$(git branch -r --contains ${{ github.ref }})
        branch=${raw/origin\/}
        echo "BRANCH=$branch" >> $GITHUB_ENV
    - run: echo ${{ env.BRANCH }}

    - name: exit if commit is not in master
      if: env.BRANCH != 'shit'
      run: exit 1

  build:
    needs: [check-tag-branch]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: 'Use Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node-version }}'

      - name: Download all modules
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Compress build output with zip
        run: (cd ./dist; zip -r ../monitor.zip .)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./monitor.zip
          asset_name: monitor.zip
          asset_content_type: application/zip
